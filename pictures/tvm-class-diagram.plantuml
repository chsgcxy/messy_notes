@startuml tvm-class-diagram

class AttrVisitor {
    {method} +virtual void Visit(const char* key, double* value) = 0;
    {method} +virtual void Visit(const char* key, int64_t* value) = 0;
    {method} +virtual void Visit(const char* key, uint64_t* value) = 0;
    {method} +virtual void Visit(const char* key, int* value) = 0;
    {method} +virtual void Visit(const char* key, bool* value) = 0;
    {method} +virtual void Visit(const char* key, std::string* value) = 0;
    {method} +virtual void Visit(const char* key, void** value) = 0;
    {method} +virtual void Visit(const char* key, Type* value) = 0;
    {method} +virtual void Visit(const char* key, NodeRef* value) = 0;
    {method} +virtual void Visit(const char* key, runtime::NDArray* value) = 0;
    {method} +virtual void Visit(const char* key, runtime::Object* value) = 0;
}

class NodeIndexer {
    {method} +void Visit(const char* key, double* value);
    {method} +void Visit(const char* key, int64_t* value);
    {method} +void Visit(const char* key, uint64_t* value);
    {method} +void Visit(const char* key, int* value);
    {method} +void Visit(const char* key, bool* value);
    {method} +void Visit(const char* key, std::string* value);
    {method} +void Visit(const char* key, void** value);
    {method} +void Visit(const char* key, Type* value);
    {method} +void Visit(const char* key, NodeRef* value);
    {method} +void Visit(const char* key, runtime::NDArray* value);
    {method} +void Visit(const char* key, runtime::Object* value);    
}

class NodeAttrSetter {
    {method} +void Visit(const char* key, double* value);
    {method} +void Visit(const char* key, int64_t* value);
    {method} +void Visit(const char* key, uint64_t* value);
    {method} +void Visit(const char* key, int* value);
    {method} +void Visit(const char* key, bool* value);
    {method} +void Visit(const char* key, std::string* value);
    {method} +void Visit(const char* key, void** value);
    {method} +void Visit(const char* key, Type* value);
    {method} +void Visit(const char* key, NodeRef* value);
    {method} +void Visit(const char* key, runtime::NDArray* value);
    {method} +void Visit(const char* key, runtime::Object* value);    
}

class JSONAttrGetter {
    {method} +void Visit(const char* key, double* value);
    {method} +void Visit(const char* key, int64_t* value);
    {method} +void Visit(const char* key, uint64_t* value);
    {method} +void Visit(const char* key, int* value);
    {method} +void Visit(const char* key, bool* value);
    {method} +void Visit(const char* key, std::string* value);
    {method} +void Visit(const char* key, void** value);
    {method} +void Visit(const char* key, Type* value);
    {method} +void Visit(const char* key, NodeRef* value);
    {method} +void Visit(const char* key, runtime::NDArray* value);
    {method} +void Visit(const char* key, runtime::Object* value);    
}

class JSONAttrSetter {
    {method} +void Visit(const char* key, double* value);
    {method} +void Visit(const char* key, int64_t* value);
    {method} +void Visit(const char* key, uint64_t* value);
    {method} +void Visit(const char* key, int* value);
    {method} +void Visit(const char* key, bool* value);
    {method} +void Visit(const char* key, std::string* value);
    {method} +void Visit(const char* key, void** value);
    {method} +void Visit(const char* key, Type* value);
    {method} +void Visit(const char* key, NodeRef* value);
    {method} +void Visit(const char* key, runtime::NDArray* value);
    {method} +void Visit(const char* key, runtime::Object* value);    
}

NodeIndexer --|> AttrVisitor
NodeAttrSetter --|> AttrVisitor
JSONAttrGetter --|> AttrVisitor
JSONAttrSetter --|> AttrVisitor


class Node {
    {method} +virtual void VisitAttrs(AttrVisitor* visitor) {}
}

class TensorNode {
    {field} +static constexpr const char* _type_key = "Tensor";
    {method} +void VisitAttrs(AttrVisitor* v);
    {method} +TVM_DLL static Tensor make(Array<Expr> shape, Type dtype, Operation op, int value_index);
}

class IterVarNode {
    {field} +static constexpr const char* _type_key = "IterVar";
    {method} +void VisitAttrs(AttrVisitor* v);
    {method} +TVM_DLL static IterVar make(Range dom, Var var, IterVarType iter_type, std::string thread_tag = "");
}

class CommReducerNode {
    {field} +static constexpr const char* _type_key = "CommReducer";
    {method} +void VisitAttrs(AttrVisitor* v);
}

class BufferNode {
    {field} +static constexpr const char* _type_key = "Buffer";
    {method} +void VisitAttrs(AttrVisitor* v);
    {method} +TVM_DLL static Buffer make(...);
}

BufferNode -up-|> Node
CommReducerNode -up-|> Node
IterVarNode -up-|> Node
TensorNode -up-|> Node

class NodeRef {
  {method} +inline const Node* operator->() const;
}

NodeRef -up- AttrVisitor
Node -left- NodeRef

@enduml