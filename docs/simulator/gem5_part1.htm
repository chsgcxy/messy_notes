<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>PowerPoint 演示文稿</title><meta name="author" content="HR OPS"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: #1B5493; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 46pt; }
 .s1 { color: #1B5493; font-family:"等线 Light"; font-style: normal; font-weight: normal; text-decoration: none; font-size: 24pt; }
 .s2 { color: #1B5493; font-family:"等线 Light"; font-style: normal; font-weight: normal; text-decoration: none; font-size: 17.5pt; }
 .s3 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18pt; }
 .s4 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s5 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .p, p { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; margin:0pt; }
 .s8 { color: #585858; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18pt; }
 .s9 { color: #EC7C30; font-family:"Arial Unicode MS", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s10 { color: #202429; font-family:"Arial Unicode MS", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s13 { color: #6FAC46; font-family:"Arial Unicode MS", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 h3 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 .s14 { color: #202429; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 h4 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 12pt; }
 h2 { color: #202429; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s15 { color: #4471C4; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s16 { color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s18 { color: #6FAC46; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 .s19 { color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16pt; vertical-align: -4pt; }
 .s20 { color: #EC7C30; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16pt; }
 .s21 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; vertical-align: 2pt; }
 .s22 { color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16pt; }
 .s23 { color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s24 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s25 { color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s26 { color: #6FAC46; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s28 { color: #202429; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s29 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s30 { color: #EC7C30; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s32 { color: #C578DD; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s33 { color: #E4C07A; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s34 { color: #ABB1BE; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s35 { color: #DF6C75; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s36 { color: #5C626F; font-family:Consolas, monospace; font-style: italic; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s37 { color: #60AEEE; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s38 { color: #D19A66; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s39 { color: #EC7C30; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s40 { color: #4471C4; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s41 { color: black; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s42 { color: #4471C4; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s43 { color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s44 { color: #D19A66; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s45 { color: #ABB1BE; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s47 { color: #ABB1BE; font-family:Consolas, monospace; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s49 { color: #C578DD; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s51 { color: #ABB1BE; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s52 { color: #DF6C75; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s54 { color: #4471C4; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18pt; }
 .s59 { color: #ABB1BE; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s60 { color: #C578DD; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s61 { color: #E4C07A; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s63 { color: #E4C07A; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s64 { color: #4471C4; font-family:"Arial Unicode MS", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s65 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: -2pt; }
 .s66 { color: #F00; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: -2pt; }
 .s67 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s68 { color: #F00; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s69 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s72 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: -2pt; }
 .s73 { color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: -2pt; }
 .s75 { color: #ABB1BE; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s78 { color: #5C626F; font-family:Consolas, monospace; font-style: italic; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s79 { color: #202429; font-family:"Arial Unicode MS", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s80 { color: #202429; font-family:"Arial Unicode MS", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s83 { color: #0462C1; font-family:"Trebuchet MS", sans-serif; font-style: italic; font-weight: bold; text-decoration: underline; font-size: 11pt; }
 .s85 { color: #202429; font-family:Calibri, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s86 { color: #202429; font-family:"Arial Unicode MS", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s87 { color: #0094AE; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10.5pt; }
 .s88 { color: #202429; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10.5pt; }
 .s89 { color: #1B5493; font-family:"等线 Light"; font-style: normal; font-weight: normal; text-decoration: none; font-size: 36pt; }
 .s90 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 48pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 18pt; }
 #l2 {padding-left: 0pt; }
 #l2> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 #l3 {padding-left: 0pt; }
 #l3> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 #l4 {padding-left: 0pt; }
 #l4> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; }
 #l5 {padding-left: 0pt; }
 #l5> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l6 {padding-left: 0pt;counter-reset: d1 1; }
 #l6> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: #0094AE; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9.5pt; }
 #l6> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 li {display: block; }
 #l7 {padding-left: 0pt;counter-reset: e1 4; }
 #l7> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l7> li:first-child>*:first-child:before {counter-increment: e1 0;  }
</style></head><body><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-left: 447pt;text-indent: 0pt;line-height: 52pt;text-align: left;">Gem5  part1</h1><p class="s1" style="padding-top: 4pt;padding-left: 447pt;text-indent: 0pt;line-height: 31pt;text-align: left;">A Modular platform for computer-system</p><p class="s1" style="padding-left: 447pt;text-indent: 0pt;line-height: 31pt;text-align: left;">architecture research</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 101pt;text-indent: 0pt;text-align: center;">chsgcxy</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s3" style="padding-top: 4pt;padding-left: 90pt;text-indent: -22pt;line-height: 22pt;text-align: left;">Base introduction</p><ul id="l2"><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Why named Gem5</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Almost most popular</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Modular platform</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Compiling Gem5</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">How to use</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Statistics</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Fs mode and Se mode</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Checkpoint</p></li></ul></li><li><p class="s3" style="padding-left: 90pt;text-indent: -22pt;line-height: 22pt;text-align: left;">Core mechanism</p><ul id="l3"><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Event-driven</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Python &amp;&amp; c++</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Clock system</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Instruction frameworks</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">memory system</p></li><li><p class="s4" style="padding-left: 126pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Ruby subsystem</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-top: 6pt;padding-left: 36pt;text-indent: 0pt;text-align: center;">Why named Gem5</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">m5 simulator</p><p class="s3" style="padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">GEMS simulator</p><p style="padding-left: 231pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; vertical-align: 5pt;">	</span><span><img width="91" height="56" alt="image" src="gem5_part1_files/Image_001.png"/></span><span style=" color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">	</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;line-height: 14pt;text-align: right;">University of <span style=" color: #4471C4;">Michigan</span></p><p style="text-indent: 0pt;line-height: 14pt;text-align: right;">Modeling <span style=" color: #843B0C;">Networked </span>Systems</p><p style="text-indent: 0pt;line-height: 15pt;text-align: right;">2006</p><p class="s8" style="padding-top: 6pt;padding-left: 48pt;text-indent: 0pt;text-align: left;">2011</p><p style="padding-left: 33pt;text-indent: 0pt;line-height: 14pt;text-align: left;">University of <span style=" color: #4471C4;">Wisconsin</span></p><p style="padding-left: 33pt;text-indent: 0pt;line-height: 14pt;text-align: left;">general <span style=" color: #843B0C;">execution-driven </span>multiprocessor simulator</p><p style="padding-left: 33pt;text-indent: 0pt;line-height: 15pt;text-align: left;">2005</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l4"><li><p class="s9" style="padding-top: 3pt;padding-left: 190pt;text-indent: -22pt;line-height: 21pt;text-align: left;">Open-source <span style=" color: #202429;">computer architecture simulator used </span><span style=" color: #000;">in </span>academia <span style=" color: #000;">and in </span>industry</p></li><li><p class="s10" style="padding-left: 190pt;text-indent: -22pt;line-height: 17pt;text-align: left;">gem5 is used by many industrial research labs including <span style=" color: #FFC000;">ARM </span>Research, <span style=" color: #EC7C30;">AMD </span>Research,</p><p class="s13" style="padding-left: 190pt;text-indent: 0pt;line-height: 21pt;text-align: left;">Google<span style=" color: #202429;">, Micron, Metempsy, HP, Samsung, and others.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h3 style="padding-top: 7pt;padding-left: 101pt;text-indent: 0pt;text-align: center;">Almost the most popular open-source <span class="s14">simulator for architecture research</span></h3><p style="text-indent: 0pt;text-align: left;"><span><img width="193" height="443" alt="image" src="gem5_part1_files/Image_002.jpg"/></span></p><h4 style="padding-top: 18pt;padding-left: 346pt;text-indent: 0pt;text-align: center;">contributors</h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 327pt;text-indent: 0pt;text-align: left;"><span><img width="642" height="201" alt="image" src="gem5_part1_files/Image_003.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 349pt;text-indent: 0pt;text-align: center;">commits</h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 327pt;text-indent: 0pt;text-align: left;"><span><img width="637" height="95" alt="image" src="gem5_part1_files/Image_004.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="708" height="474" alt="image" src="gem5_part1_files/Image_005.jpg"/></span></p><h2 style="padding-left: 63pt;text-indent: 0pt;text-align: left;">A modular platform for computer-system architecture research</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l5"><li><p class="s4" style="padding-left: 581pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Multiple interchangeable CPU models</p></li><li><p class="s4" style="padding-left: 581pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Multiple ISA support (static)</p></li><li><p class="s4" style="padding-left: 581pt;text-indent: -22pt;line-height: 17pt;text-align: left;">Dynamically configurable(branch-predictor, CPU, DRAM</p><p class="s4" style="padding-left: 594pt;text-indent: 0pt;line-height: 15pt;text-align: left;">Prefetcher, replacement policy, ……)</p></li><li><p class="s4" style="padding-left: 581pt;text-indent: -22pt;line-height: 23pt;text-align: left;">Configurable memory <span class="s10">hierarchy</span></p></li></ul></li></ul></li></ul></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 101pt;text-indent: 0pt;text-align: center;">Compiling Gem5</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 189pt;text-indent: 0pt;text-align: left;"><span><img width="744" height="360" alt="image" src="gem5_part1_files/Image_006.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 101pt;text-indent: 0pt;text-align: center;">How gem5 is used for computer architecture research</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1223" height="449" alt="image" src="gem5_part1_files/Image_007.png"/></span></p><p style="padding-top: 2pt;padding-left: 268pt;text-indent: 0pt;text-align: left;">#include &lt;stdio.h&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 268pt;text-indent: 0pt;line-height: 15pt;text-align: left;">int main(int argc, char* argv[])</p><p class="s15" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Can run different workloads</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 268pt;text-indent: 0pt;line-height: 15pt;text-align: left;">{</p><p style="padding-left: 279pt;text-indent: 0pt;text-align: left;">printf(&quot;Hello world!\n&quot;); return 0;</p><p style="padding-left: 268pt;text-indent: 0pt;line-height: 15pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;text-indent: 0pt;text-align: right;">Config.dot</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-top: 2pt;padding-left: 369pt;text-indent: 0pt;text-align: left;">./build/ARM/gem5.debug <span style=" color: #EC7C30;">configs/example/se.py </span><span style=" color: #4471C4;">-c tests/test-progs/hello/bin/arm/linux/hello</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s18" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Somewhat similar with DTB</p><p style="padding-left: 703pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-top: 13pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">Gem5 lib                             <span class="s20">Python script</span></p><p class="s21" style="padding-top: 2pt;padding-left: 49pt;text-indent: 0pt;text-align: left;">log                                           <span class="p">M5out/stats.txt</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 101pt;text-indent: 0pt;text-align: center;">Statistics Detail</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 11pt;text-indent: 0pt;text-align: left;"><span><img width="1210" height="151" alt="image" src="gem5_part1_files/Image_008.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 11pt;text-indent: 0pt;text-align: left;"><span><img width="1128" height="39" alt="image" src="gem5_part1_files/Image_009.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 11pt;text-indent: 0pt;text-align: left;"><span><img width="1129" height="56" alt="image" src="gem5_part1_files/Image_010.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 11pt;text-indent: 0pt;text-align: left;"><span><img width="1139" height="122" alt="image" src="gem5_part1_files/Image_011.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 11pt;text-indent: 0pt;text-align: left;"><span><img width="1082" height="57" alt="image" src="gem5_part1_files/Image_012.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-top: 8pt;padding-left: 122pt;text-indent: 0pt;text-align: left;">fs (full system) mode &amp; se (<span style=" color: #000;">system call emulation</span>) mode</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="993" height="322" alt="image" src="gem5_part1_files/Image_013.png"/></span></p><p class="s22" style="text-indent: 0pt;line-height: 16pt;text-align: left;">configs/example/se.py</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">./build/ARM/gem5.debug configs/example/fs.py</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">--caches</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">--kernel=vmlinux.arm64</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: left;">--disk-image=ubuntu-18.04-arm64-docker.img</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">./build/ARM/gem5.debug configs/example/se.py</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">--cpu-type=ArmAtomicSimpleCPU --caches --l2cache</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">--mem-type=DDR4_2400_8x8 --mem-size=2GB</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: left;">--l1d_size=64kB --l1i_size=32kB --l2_size=512kB -n 4</p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: left;">-c tests/test-progs/threads/src/threads</p><p style="text-indent: 0pt;text-align: left;"/><p class="s22" style="padding-top: 2pt;padding-left: 101pt;text-indent: 0pt;text-align: center;">configs/example/fs.py</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s23" style="padding-top: 6pt;padding-left: 311pt;text-indent: 0pt;text-align: left;">Start kernel will take about 40 minutes on my desktop</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s23" style="padding-left: 76pt;text-indent: 0pt;text-align: left;">This will hang while run 4 cores, to be resolved (x86 ok)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="102" height="103" alt="相机图标 的图像结果" title="相机图标 的图像结果" src="gem5_part1_files/Image_014.jpg"/></span></p><h2 style="padding-left: 90pt;text-indent: 0pt;text-align: center;">checkpoint</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">./build/ARM/gem5.debug</p><p class="s24" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">configs/example/fs.py</p><p class="s24" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">--caches</p><p class="s24" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">--kernel=vmlinux.arm64</p><p class="s24" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">--disk-image=ubuntu-18.04-arm64-docker.img</p><p class="s25" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">--take-checkpoints=<span style=" color: #6FAC46;">100000000</span>,<span style=" color: #4471C4;">100000</span></p><p style="text-indent: 0pt;text-align: left;"/><h4 style="padding-top: 4pt;text-indent: 0pt;text-align: right;">Create checkpoint Command line</h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="64" alt="image" src="gem5_part1_files/Image_015.png"/></span></p><p class="s26" style="text-indent: 0pt;text-align: right;">when<span style=" color: #F00;">, </span><span style=" color: #4471C4;">period</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="text-indent: 0pt;text-align: right;">File tree</h4><p class="s28" style="padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;">Checkpoints are essentially snapshops of a simulation</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 92pt;text-indent: 0pt;text-align: left;"><span><img width="80" height="27" alt="image" src="gem5_part1_files/Image_016.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s29" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">build/ARM/dev/arm/rv_ctrl.cc:176: warn: SCReg: Access to unknown device dcc0:site0:pos0:fn7:dev0</p><p class="s30" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">Writing checkpoint</p><p class="s29" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">build/ARM/sim/simulate.cc:194: info: Entering event queue <span style=" color: #6FAC46;">@ 100000000</span>. Starting simulation...</p><p class="s30" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">Writing checkpoint</p><p class="s29" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">build/ARM/sim/simulate.cc:194: info: Entering event queue <span style=" color: #6FAC46;">@ 100100000</span>. Starting simulation...</p><p class="s30" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">Writing checkpoint</p><p class="s29" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">build/ARM/sim/simulate.cc:194: info: Entering event queue <span style=" color: #6FAC46;">@ 100200000</span>. Starting simulation...</p><p style="text-indent: 0pt;text-align: left;"/><h4 style="padding-left: 71pt;text-indent: 0pt;text-align: left;">log</h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="751" height="185" alt="image" src="gem5_part1_files/Image_017.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 156pt;text-indent: 0pt;line-height: 14pt;text-align: left;">Will sort cpt.xxx and restore according to the given index</p><p style="text-indent: 0pt;text-align: left;"/><h4 style="padding-top: 2pt;padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Restore command line</h4><p class="s24" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">./build/ARM/gem5.debug configs/example/fs.py</p><p class="s24" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">--caches</p><p class="s24" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">--kernel=vmlinux.arm64</p><p class="s24" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">--disk-image=ubuntu-18.04-arm64-docker.img</p><p class="s25" style="padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;">--checkpoint-restore=2</p><p style="padding-left: 607pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 189pt;text-indent: 0pt;text-align: left;"><span><img width="907" height="58" alt="image" src="gem5_part1_files/Image_018.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 101pt;text-indent: 0pt;text-align: center;">Event-driven</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s32" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">class <span style=" color: #E4C07A;">Event</span></p><p class="s34" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">{</p><p class="s33" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">Event <span style=" color: #C578DD;">*</span><span style=" color: #DF6C75;">nextBin</span><span style=" color: #ABB1BE;">; </span>Event <span style=" color: #C578DD;">*</span><span style=" color: #DF6C75;">nextInBin</span><span style=" color: #ABB1BE;">;</span></p><p class="s36" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">//!&lt; timestamp when event should be processed</p><p class="s33" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">Tick <span style=" color: #DF6C75;">_when</span><span style=" color: #ABB1BE;">;</span></p><p class="s33" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">Priority <span style=" color: #DF6C75;">_priority</span><span style=" color: #ABB1BE;">; </span><span class="s36">//!&lt; event priority</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s32" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">virtual void <span style=" color: #60AEEE;">process</span><span style=" color: #ABB1BE;">() </span>= <span style=" color: #D19A66;">0</span><span style=" color: #ABB1BE;">;</span></p><p class="s34" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"/><p class="s39" style="padding-top: 3pt;text-indent: 0pt;text-align: right;">When=500, priority=50</p><p class="s39" style="padding-top: 3pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">When=500, priority=64</p><p class="s39" style="padding-top: 3pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">When=1000, priority=50</p><p class="s39" style="padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">When=1000, priority=90</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="34" alt="image" src="gem5_part1_files/Image_019.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="49" height="132" alt="image" src="gem5_part1_files/Image_020.png"/></span></p><p class="s29" style="padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">Event2</p><p style="text-indent: 0pt;text-align: left;"/><p class="s29" style="padding-top: 3pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">Event1</p><p style="text-indent: 0pt;text-align: left;"/><p class="s29" style="padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">Event0</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="34" alt="image" src="gem5_part1_files/Image_021.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="49" height="69" alt="image" src="gem5_part1_files/Image_022.png"/></span></p><p class="s29" style="padding-top: 3pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">Event0</p><p style="text-indent: 0pt;text-align: left;"/><p class="s29" style="padding-top: 3pt;padding-left: 28pt;text-indent: 0pt;text-align: left;">Event4</p><p style="text-indent: 0pt;text-align: left;"/><p class="s29" style="padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">Event1</p><p style="text-indent: 0pt;text-align: left;"/><p class="s29" style="padding-top: 4pt;padding-left: 28pt;text-indent: 0pt;text-align: left;">Event3</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="34" alt="image" src="gem5_part1_files/Image_023.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="49" height="132" alt="image" src="gem5_part1_files/Image_024.png"/></span></p><p class="s29" style="padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">Event2</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="79" height="76" alt="image" src="gem5_part1_files/Image_025.png"/></span></p><p class="s29" style="padding-top: 3pt;padding-left: 28pt;text-indent: 0pt;text-align: left;">Event5</p><p style="text-indent: 0pt;text-align: left;"/><p class="s29" style="padding-top: 4pt;padding-left: 28pt;text-indent: 0pt;text-align: left;">Event6</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="34" alt="image" src="gem5_part1_files/Image_026.png"/></span></p><p class="s40" style="padding-top: 3pt;padding-left: 75pt;text-indent: 0pt;text-align: center;">nextInBin</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s41" style="padding-left: 455pt;text-indent: 0pt;text-align: left;"><span><img width="8" height="34" alt="image" src="gem5_part1_files/Image_027.png"/></span>	<span><img width="8" height="34" alt="image" src="gem5_part1_files/Image_028.png"/></span></p><p class="s42" style="padding-top: 8pt;padding-left: 298pt;text-indent: 0pt;text-align: center;">nextBin</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s43" style="padding-top: 2pt;padding-left: 101pt;text-indent: 0pt;text-align: center;">The same when and priority</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s44" style="padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;">0<span style=" color: #ABB1BE;">: O3CPU </span>tick.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>61 <span style=" color: #ABB1BE;">executed @ </span>0</p><p class="s44" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">0<span style=" color: #ABB1BE;">: </span>system.cpu.icache.mem_side_port-MemSidePort.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>71 <span style=" color: #ABB1BE;">scheduled @ </span>1000</p><p class="s44" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">0<span style=" color: #ABB1BE;">: O3CPU </span>tick.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>61 <span style=" color: #ABB1BE;">scheduled @ </span>500</p><p class="s44" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">500<span style=" color: #ABB1BE;">: O3CPU </span>tick.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>61 <span style=" color: #ABB1BE;">executed @ </span>500</p><p class="s44" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">500<span style=" color: #ABB1BE;">: O3CPU </span>tick.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>61 <span style=" color: #ABB1BE;">scheduled @ </span>1000</p><p class="s44" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">1000<span style=" color: #ABB1BE;">: </span>system.cpu.icache.mem_side_port-MemSidePort.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>71 <span style=" color: #ABB1BE;">executed @ </span>1000</p><p class="s44" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">1000<span style=" color: #ABB1BE;">: </span>system.l2.mem_side_port-MemSidePort.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>76 <span style=" color: #ABB1BE;">scheduled @ </span>11500</p><p class="s44" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">1000<span style=" color: #ABB1BE;">: </span>system.tol2bus.reqLayer0.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>88 <span style=" color: #ABB1BE;">scheduled @ </span>1500</p><p class="s44" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">1000<span style=" color: #ABB1BE;">: O3CPU </span>tick.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>61 <span style=" color: #ABB1BE;">executed @ </span>1000</p><p class="s44" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">1000<span style=" color: #ABB1BE;">: O3CPU </span>tick.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>61 <span style=" color: #ABB1BE;">scheduled @ </span>1500</p><p class="s44" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">1500<span style=" color: #ABB1BE;">: </span>system.tol2bus.reqLayer0.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>88 <span style=" color: #ABB1BE;">executed @ </span>1500</p><p class="s44" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">1500<span style=" color: #ABB1BE;">: O3CPU </span>tick.wrapped_function_event<span style=" color: #ABB1BE;">: EventFunctionWrapped </span>61 <span style=" color: #ABB1BE;">executed @ </span>1500</p><p style="padding-left: 16pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="697" height="409" alt="image" src="gem5_part1_files/Image_029.jpg"/></span></p><p class="s33" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Event <span style=" color: #C578DD;">*</span>EventQueue<span style=" color: #ABB1BE;">::</span><span style=" color: #60AEEE;">serviceOne</span><span style=" color: #ABB1BE;">()</span></p><p class="s34" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">{</p><p class="s34" style="padding-left: 30pt;text-indent: 0pt;text-align: left;"><span style=" color: #C578DD;">if </span>(<span style=" color: #DF6C75;">next</span>) {</p><p class="s35" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">next<span style=" color: #ABB1BE;">-&gt;</span>nextBin <span style=" color: #C578DD;">= </span>head<span style=" color: #ABB1BE;">-&gt;</span>nextBin<span style=" color: #ABB1BE;">; </span>head <span style=" color: #C578DD;">= </span>next<span style=" color: #ABB1BE;">;</span></p><p class="s34" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">} <span style=" color: #C578DD;">else </span>{</p><p class="s35" style="padding-left: 54pt;text-indent: 0pt;text-align: left;">head <span style=" color: #C578DD;">= </span>head<span style=" color: #ABB1BE;">-&gt;</span>nextBin<span style=" color: #ABB1BE;">;</span></p><p class="s34" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s47" style="padding-left: 30pt;text-indent: 0pt;text-align: left;"><span style=" color: #60AEEE;">setCurTick</span>(<span style=" color: #DF6C75;">event</span>-&gt;<span style=" color: #60AEEE;">when</span>());</p><p class="s47" style="padding-left: 30pt;text-indent: 0pt;text-align: left;"><span style=" color: #DF6C75;">event</span>-&gt;<span style=" color: #60AEEE;">process</span>();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s32" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">return <span style=" color: #60AEEE;">NULL</span><span style=" color: #ABB1BE;">;</span></p><p class="s34" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"/><p class="s33" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">GlobalSimLoopExitEvent <span style=" color: #C578DD;">*</span><span style=" color: #60AEEE;">simulate</span><span style=" color: #ABB1BE;">(</span>Tick <span style=" color: #ABB1BE;">num_cycles)</span></p><p class="s34" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">{</p><p class="s34" style="padding-left: 30pt;text-indent: 0pt;text-align: left;"><span style=" color: #C578DD;">while </span>(<span style=" color: #D19A66;">1</span>)</p><p class="s37" style="padding-left: 54pt;text-indent: 0pt;text-align: left;"><span style=" color: #E4C07A;">Event </span><span style=" color: #C578DD;">*</span><span style=" color: #DF6C75;">exit_event </span><span style=" color: #C578DD;">= </span><span style=" color: #DF6C75;">mainEventQueue</span>[<span style=" color: #D19A66;">0</span>]<span style=" color: #ABB1BE;">-&gt;</span>serviceOne<span style=" color: #ABB1BE;">();</span></p><p class="s34" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"/><p class="s32" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">class <span style=" color: #E4C07A;">SimObject</span></p><p class="s34" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">{</p><p class="s32" style="padding-left: 30pt;text-indent: 0pt;line-height: 204%;text-align: left;">static <span style=" color: #ABB1BE;">std::</span><span style=" color: #E4C07A;">vector</span>&lt;<span style=" color: #E4C07A;">SimObject </span>*&gt; <span style=" color: #DF6C75;">simObjectList</span><span style=" color: #ABB1BE;">; </span>virtual void <span style=" color: #60AEEE;">init</span><span style=" color: #ABB1BE;">();</span></p><p class="s32" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">virtual void <span style=" color: #60AEEE;">startup</span><span style=" color: #ABB1BE;">();</span></p><p class="s34" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"/><h2 style="padding-top: 6pt;padding-left: 101pt;text-indent: 0pt;text-align: center;">Python &amp; C++</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 445pt;text-indent: 0pt;text-align: left;"><span><img width="152" height="40" alt="pybind11 logo" title="pybind11 logo" src="gem5_part1_files/Image_030.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 101pt;text-indent: 0pt;text-align: center;">clock system</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 123pt;text-indent: 0pt;text-align: left;"><span><img width="948" height="388" alt="image" src="gem5_part1_files/Image_031.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s32" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">class <span style=" color: #E4C07A;">StaticInst</span></p><p class="s34" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">{</p><p class="s32" style="padding-left: 49pt;text-indent: 0pt;text-align: left;"><span style=" color: #ABB1BE;">std::</span><span style=" color: #E4C07A;">bitset</span>&lt;<span style=" color: #DF6C75;">Num_Flags</span>&gt; <span style=" color: #DF6C75;">flags</span><span style=" color: #ABB1BE;">;</span></p><p class="s33" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">OpClass <span style=" color: #DF6C75;">_opClass</span><span style=" color: #ABB1BE;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">uint8_t <span style=" color: #DF6C75;">_numSrcRegs </span><span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">0</span><span style=" color: #ABB1BE;">; </span>uint8_t <span style=" color: #DF6C75;">_numDestRegs </span><span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">0</span><span style=" color: #ABB1BE;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s33" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">RegIdArrayPtr <span style=" color: #DF6C75;">_srcRegIdxPtr </span><span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">nullptr</span><span style=" color: #ABB1BE;">; </span>RegIdArrayPtr <span style=" color: #DF6C75;">_destRegIdxPtr </span><span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">nullptr</span><span style=" color: #ABB1BE;">;</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s34" style="padding-left: 49pt;text-indent: 0pt;line-height: 13pt;text-align: left;"><span style=" color: #C578DD;">virtual </span>std::<span style=" color: #E4C07A;">string </span><span style=" color: #60AEEE;">generateDisassembly</span>(</p><h2 style="padding-left: 25pt;text-indent: 0pt;text-align: left;">Instruction frameworks</h2><p style="text-indent: 0pt;text-align: left;"><span><img width="995" height="428" alt="image" src="gem5_part1_files/Image_032.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="57" height="8" alt="image" src="gem5_part1_files/Image_033.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="97" height="39" alt="image" src="gem5_part1_files/Image_034.png"/></span></p><p style="padding-top: 5pt;padding-left: 17pt;text-indent: 0pt;text-align: left;">DynInst(O3CPU)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s24" style="padding-top: 5pt;padding-left: 20pt;text-indent: 0pt;text-align: left;">X86StaticInst</p><p style="text-indent: 0pt;text-align: left;"/><p class="s24" style="padding-top: 5pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">StaticInst</p><p style="text-indent: 0pt;text-align: left;"/><p class="s24" style="padding-top: 5pt;padding-left: 17pt;text-indent: 0pt;text-align: left;">RiscvStaticInst</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">MinorDynInst</p><p style="text-indent: 0pt;text-align: left;"/><p class="s24" style="padding-top: 5pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">ArmStaticInst</p><p style="text-indent: 0pt;text-align: left;"/><p class="s49" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">enum <span style=" color: #E4C07A;">OpClass</span></p><p class="s51" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">{</p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">No_OpClass <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">0</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">IntAlu <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">1</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">IntMult <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">2</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">IntDiv <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">3</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">FloatAdd <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">4</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">FloatCmp <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">5</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">FloatCvt <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">6</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">FloatMult <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">7</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">FloatMultAcc <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">8</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">FloatDiv <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">9</span><span style=" color: #ABB1BE;">,</span></p><p class="s51" style="padding-left: 51pt;text-indent: 0pt;text-align: left;">……</p><p class="s51" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"/><p class="s49" style="padding-top: 7pt;padding-left: 125pt;text-indent: 0pt;text-align: left;">enum <span style=" color: #E4C07A;">Flags</span></p><p class="s51" style="padding-left: 125pt;text-indent: 0pt;text-align: left;">{</p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsNop <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">0</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsInteger <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">1</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsFloating <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">2</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsVector <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">3</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsVectorElem <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">4</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsLoad <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">5</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsStore <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">6</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsAtomic <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">7</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsStoreConditional <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">8</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsInstPrefetch <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">9</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">IsDataPrefetch <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">10</span><span style=" color: #ABB1BE;">,</span></p><p class="s34" style="padding-left: 97pt;text-indent: 0pt;text-align: left;"><span style=" color: #E4C07A;">Addr </span>pc, <span style=" color: #C578DD;">const </span>loader::<span style=" color: #E4C07A;">SymbolTable </span><span style=" color: #C578DD;">*</span>symtab) <span style=" color: #C578DD;">const = </span><span style=" color: #D19A66;">0</span>;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s32" style="padding-left: 97pt;text-indent: -48pt;text-align: left;">virtual <span style=" color: #E4C07A;">Fault </span><span style=" color: #60AEEE;">execute</span><span style=" color: #ABB1BE;">(</span><span style=" color: #E4C07A;">ExecContext </span>*<span style=" color: #ABB1BE;">xc, Trace::</span><span style=" color: #E4C07A;">InstRecord </span>*<span style=" color: #ABB1BE;">traceData) </span>const = <span style=" color: #D19A66;">0</span><span style=" color: #ABB1BE;">;</span></p><p class="s32" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">virtual void <span style=" color: #60AEEE;">advancePC</span><span style=" color: #ABB1BE;">(</span><span style=" color: #E4C07A;">PCStateBase </span>&amp;<span style=" color: #ABB1BE;">pc_state) </span>const = <span style=" color: #D19A66;">0</span><span style=" color: #ABB1BE;">;</span></p><p class="s34" style="padding-left: 49pt;text-indent: 0pt;text-align: left;"><span style=" color: #C578DD;">virtual </span>std::<span style=" color: #E4C07A;">unique_ptr</span>&lt;<span style=" color: #E4C07A;">PCStateBase</span>&gt; <span style=" color: #60AEEE;">branchTarget</span>(</p><p class="s32" style="padding-left: 97pt;text-indent: 0pt;text-align: left;">const <span style=" color: #E4C07A;">PCStateBase </span>&amp;<span style=" color: #ABB1BE;">pc) </span>const<span style=" color: #ABB1BE;">;</span></p><p class="s34" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">}</p><p class="s52" style="padding-left: 69pt;text-indent: 0pt;line-height: 10pt;text-align: left;">IsControl <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">11</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 69pt;text-indent: 0pt;text-align: left;">IsDirectControl <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">12</span><span style=" color: #ABB1BE;">,</span></p><p class="s52" style="padding-left: 69pt;text-indent: 0pt;text-align: left;">IsIndirectControl <span style=" color: #C578DD;">= </span><span style=" color: #D19A66;">13</span><span style=" color: #ABB1BE;">,</span></p><p class="s51" style="padding-left: 69pt;text-indent: 0pt;text-align: left;">……</p><p class="s51" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 123pt;text-indent: 0pt;text-align: left;">inherit</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">reference</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 2pt;padding-left: 52pt;text-indent: 0pt;text-align: left;">The cpu can deal with Flags and OpClass and no longer need to care about which instruction it is</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 101pt;text-indent: 0pt;text-align: center;">Instruction frameworks</h2><p style="text-indent: 0pt;text-align: left;"><span><img width="35" height="456" alt="image" src="gem5_part1_files/Image_035.png"/></span></p><p class="s38" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">0x0e<span style=" color: #ABB1BE;">: decode FUNCT3 {</span></p><p class="s34" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">format ROp {</p><p class="s34" style="padding-left: 78pt;text-indent: -24pt;text-align: left;"><span style=" color: #D19A66;">0x0</span>: decode FUNCT7 { <span style=" color: #D19A66;">0x0</span>: <span style=" color: #60AEEE;">addw</span>({{</p><p class="s34" style="padding-left: 126pt;text-indent: 0pt;text-align: left;">Rd_sd <span style=" color: #C578DD;">= </span>Rs1_sw <span style=" color: #C578DD;">+ </span>Rs2_sw;</p><p class="s34" style="padding-left: 108pt;text-indent: 0pt;text-align: left;">}});</p><p class="s34" style="padding-left: 78pt;text-indent: 0pt;text-align: left;"><span style=" color: #D19A66;">0x1</span>: <span style=" color: #60AEEE;">mulw</span>({{</p><p class="s34" style="padding-left: 126pt;text-indent: 0pt;text-align: left;">Rd_sd <span style=" color: #C578DD;">= </span>(<span style=" color: #C578DD;">int32_t</span>)(Rs1_sw<span style=" color: #C578DD;">*</span>Rs2_sw);</p><p class="s34" style="padding-left: 108pt;text-indent: 0pt;text-align: left;">}}, IntMultOp);</p><p style="text-indent: 0pt;text-align: left;"/><p class="s54" style="padding-top: 13pt;padding-left: 588pt;text-indent: 0pt;text-align: left;">.isa framework given a convenient and flexible way to generate instruction classes</p><p style="padding-left: 101pt;text-indent: 0pt;line-height: 11pt;text-align: center;">Decode/xxx.isa</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="243" height="175" alt="image" src="gem5_part1_files/Image_036.jpg"/></span></p><p class="s4" style="text-indent: 0pt;text-align: right;">Build/XXX/arch/XXX/generated</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s45" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">def format <span style=" color: #60AEEE;">ROp</span>(code, <span style=" color: #C578DD;">*</span>opt_flags) {{</p><p class="s45" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">iop <span style=" color: #C578DD;">= </span><span style=" color: #60AEEE;">InstObjParams</span>(name, Name, <span style=" color: #97C379;">&#39;RegOp&#39;</span>, code, opt_flags) header_output <span style=" color: #C578DD;">= </span><span style=" color: #DF6C75;">BasicDeclare</span>.<span style=" color: #60AEEE;">subst</span>(iop)</p><p class="s45" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">decoder_output <span style=" color: #C578DD;">= </span><span style=" color: #DF6C75;">BasicConstructor</span>.<span style=" color: #60AEEE;">subst</span>(iop) decode_block <span style=" color: #C578DD;">= </span><span style=" color: #DF6C75;">BasicDecode</span>.<span style=" color: #60AEEE;">subst</span>(iop) exec_output <span style=" color: #C578DD;">= </span><span style=" color: #DF6C75;">BasicExecute</span>.<span style=" color: #60AEEE;">subst</span>(iop)</p><p class="s45" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">}};</p><p style="text-indent: 0pt;text-align: left;"/><p class="s16" style="padding-bottom: 1pt;padding-left: 609pt;text-indent: 0pt;text-align: left;">Isa_parser.py</p><p style="padding-left: 577pt;text-indent: 0pt;text-align: left;"><span><img width="194" height="27" alt="image" src="gem5_part1_files/Image_037.png"/></span></p><p style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Arch/xxx/insts:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;">branch.cc branch.hh xxx.cc xxx.hh</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 101pt;text-indent: 0pt;text-align: center;">formats/xxx.isa</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s59" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">def template BasicDeclare {{</p><p class="s60" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">class <span style=" color: #ABB1BE;">%(class_name)s : </span>public <span style=" color: #ABB1BE;">%(base_class)s</span></p><p class="s59" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">{</p><p class="s60" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">public:</p><p class="s59" style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><span style=" color: #E4C07A;">Fault </span><span style=" color: #60AEEE;">execute</span>(<span style=" color: #E4C07A;">ExecContext </span><span style=" color: #C578DD;">*</span>, Trace::<span style=" color: #E4C07A;">InstRecord </span><span style=" color: #C578DD;">*</span>); <span style=" color: #C578DD;">using %</span>(base_class)s::generateDisassembly;</p><p class="s59" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">};</p><p class="s59" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">}};</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 2pt;text-indent: 0pt;text-align: right;">Generate instructions inherited <span class="s63">StaticInst</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 10pt;padding-left: 101pt;text-indent: 0pt;text-align: center;">templates/xxx.isa</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 101pt;text-indent: 0pt;text-align: center;">memory system</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s32" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">class <span style=" color: #E4C07A;">ResponsePort </span><span style=" color: #ABB1BE;">: </span>public <span style=" color: #E4C07A;">Port</span></p><p class="s33" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">{</p><p class="s34" style="padding-left: 30pt;text-indent: 0pt;text-align: left;"><span style=" color: #C578DD;">void </span><span style=" color: #60AEEE;">bind</span>(<span style=" color: #E4C07A;">Port </span><span style=" color: #C578DD;">&amp;</span>peer) <span style=" color: #C578DD;">override </span>{} <span style=" color: #C578DD;">Bool </span><span style=" color: #60AEEE;">sendTimingResp</span>(<span style=" color: #E4C07A;">PacketPtr </span>pkt);</p><p class="s33" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"/><p class="s32" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">class <span style=" color: #E4C07A;">RequestPort</span><span style=" color: #ABB1BE;">: </span>public <span style=" color: #E4C07A;">Port</span></p><p class="s33" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">{</p><p class="s34" style="padding-left: 30pt;text-indent: 0pt;text-align: left;"><span style=" color: #C578DD;">void </span><span style=" color: #60AEEE;">bind</span>(<span style=" color: #E4C07A;">Port </span><span style=" color: #C578DD;">&amp;</span>peer) <span style=" color: #C578DD;">override</span>; <span style=" color: #C578DD;">bool </span><span style=" color: #60AEEE;">sendTimingReq</span>(<span style=" color: #E4C07A;">PacketPtr </span>pkt);</p><p class="s33" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"/><p class="s64" style="padding-top: 3pt;padding-left: 643pt;text-indent: 0pt;line-height: 18pt;text-align: left;">Every memory object has to have at least</p><p class="s64" style="padding-left: 643pt;text-indent: 0pt;line-height: 18pt;text-align: left;">one port to be useful</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">CPU1</p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">CPU2</p><p style="padding-top: 3pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">CPU1</p><p style="padding-top: 3pt;padding-left: 29pt;text-indent: 0pt;text-align: left;">DCache1</p><p style="padding-left: 36pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:&quot;Arial Unicode MS&quot;, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">		</span><span style=" color: black; font-family:&quot;Arial Unicode MS&quot;, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; vertical-align: 4pt;">	</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="53" alt="image" src="gem5_part1_files/Image_038.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="53" alt="image" src="gem5_part1_files/Image_039.png"/></span></p><p class="s65" style="padding-left: 77pt;text-indent: 0pt;line-height: 92%;text-align: left;">dcache_port (<span class="s66">RequestPort</span>)                     <span class="s67">dcache_port(</span><span class="s68">RequestPort</span><span class="s67">)</span></p><p class="s69" style="padding-top: 8pt;padding-left: 79pt;text-indent: 0pt;text-align: left;">cpuSidePort(<span style=" color: #6FAC46;">responsePort</span>)                cpuSidePort(<span style=" color: #6FAC46;">responsePort</span>)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 1pt;padding-left: 15pt;text-indent: 0pt;text-align: left;">DCache1</p><p style="padding-top: 1pt;padding-left: 15pt;text-indent: 0pt;text-align: left;">DCache2</p><p style="padding-left: 36pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">	</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="38" alt="image" src="gem5_part1_files/Image_040.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="38" alt="image" src="gem5_part1_files/Image_041.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="8" height="20" alt="image" src="gem5_part1_files/Image_042.png"/></span></p><p class="s69" style="padding-left: 76pt;text-indent: 0pt;text-align: left;">MemSidePort(<span style=" color: #F00;">reqeustPort</span>)                <span class="s72">MemSidePort(</span><span class="s73">reqeustPort</span><span class="s72">)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 78pt;text-indent: 0pt;text-align: center;">Coherent Bus</p><p style="padding-left: 36pt;text-indent: 0pt;text-align: left;"/><p class="s61" style="padding-left: 78pt;text-indent: 0pt;line-height: 12pt;text-align: left;">LSQUnit<span style=" color: #ABB1BE;">::</span><span style=" color: #60AEEE;">trySendPacket()</span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="1" height="201" alt="image" src="gem5_part1_files/Image_043.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="291" height="8" alt="image" src="gem5_part1_files/Image_044.png"/></span></p><p class="s75" style="padding-top: 1pt;padding-left: 88pt;text-indent: 0pt;text-align: left;"><span style=" color: #DF6C75;">dcachePort</span>-&gt;<span style=" color: #60AEEE;">sendTimingReq</span>(data_pkt)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="288" height="8" alt="image" src="gem5_part1_files/Image_045.png"/></span></p><p class="s59" style="padding-left: 78pt;text-indent: 0pt;text-align: left;"><span style=" color: #E4C07A;">LSQUnit</span>::<span style=" color: #60AEEE;">recvTimingResp</span>(pkt)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s51" style="padding-left: 30pt;text-indent: 0pt;text-align: left;"><span style=" color: #E4C07A;">Cache</span>::<span style=" color: #60AEEE;">recvTimingReq</span>()</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="27" height="201" alt="image" src="gem5_part1_files/Image_046.png"/></span></p><p class="s78" style="padding-left: 56pt;text-indent: 0pt;text-align: left;">latency</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s51" style="padding-left: 32pt;text-indent: 0pt;text-align: left;"><span style=" color: #DF6C75;">cpuSidePort</span>.<span style=" color: #60AEEE;">sendTimingResp</span>(pkt)</p><p style="padding-top: 3pt;padding-left: 78pt;text-indent: 0pt;text-align: center;">Simple Memory</p><p style="padding-left: 36pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s79" style="padding-left: 44pt;text-indent: 0pt;line-height: 69%;text-align: justify;">Request ports can send requests and receive responses, whereas Response ports receive requests and send responses. Due to the coherence protocol, a slave port can also send snoop requests and receive snoop responses, with the master port having the mirrored interface.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="484" height="178" alt="image" src="gem5_part1_files/Image_047.jpg"/></span></p><h2 style="padding-left: 390pt;text-indent: 0pt;text-align: left;">Ruby Subsystem</h2><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="535" height="346" alt="image" src="gem5_part1_files/Image_048.jpg"/></span></p><p class="s80" style="padding-left: 388pt;text-indent: 0pt;line-height: 69%;text-align: left;">It <span style=" color: #000;">models inclusive/exclusive cache hierarchies </span>with various <span style=" color: #EC7C30;">replacement policies</span>, <span style=" color: #EC7C30;">coherence protocol </span>implementations, <span style=" color: #EC7C30;">interconnection networks</span>, <span style=" color: #EC7C30;">DMA and memory controllers</span>, various <span style=" color: #EC7C30;">sequencers </span>that initiate memory requests and handle responses</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;"><span><img width="394" height="100" alt="image" src="gem5_part1_files/Image_049.jpg"/></span></p><p class="s80" style="padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;text-align: left;"><a href="https://www.gem5.org/documentation/general_docs/ruby/slicc" class="s83" target="_blank">SLICC</a><span style=" color: #0462C1; font-family:&quot;Trebuchet MS&quot;, sans-serif; font-style: italic; font-weight: bold; text-decoration: none; font-size: 11pt;"> </span>stands for <span class="s85">Specification Language for Implementing Cache Coherence</span></p><ol id="l6"><li><p class="s86" style="padding-top: 5pt;padding-left: 22pt;text-indent: -9pt;line-height: 15pt;text-align: left;"><span style=" color: #0462C1; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">MI_example</span>: example protocol, 1-level cache.</p></li><li><p class="s86" style="padding-top: 1pt;padding-left: 13pt;text-indent: 0pt;line-height: 69%;text-align: left;"><span style=" color: #0462C1; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">MESI_Two_Level</span><a href="https://www.gem5.org/documentation/general_docs/ruby/MOESI_CMP_directory" style=" color: #202429; font-family:&quot;Arial Unicode MS&quot;, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt;" target="_blank">: single chip, 2-level caches, strictly-inclusive hierarchy. </a><a href="https://www.gem5.org/documentation/general_docs/ruby/MOESI_CMP_directory" class="s87" target="_blank">3.</a><span style=" color: #0462C1; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">MOESI_CMP_directory</span>: multiple chips, 2-level caches, non-inclusive (neither strictly inclusive nor exclusive) hierarchy.</p></li></ol><ol id="l7"><li><p class="s86" style="padding-left: 22pt;text-indent: -9pt;line-height: 12pt;text-align: left;"><span style=" color: #0462C1; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">MOESI_CMP_token</span>: 2-level caches. TODO.</p></li><li><p class="s86" style="padding-left: 22pt;text-indent: -9pt;line-height: 13pt;text-align: left;"><span style=" color: #0462C1; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">MOESI_hammer</span>: single chip, 2-level private caches, strictly-exclusive hierarchy.</p></li><li><p class="s86" style="padding-left: 22pt;text-indent: -9pt;line-height: 13pt;text-align: left;"><span style=" color: #0462C1; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">Garnet_standalone</span>: protocol to run the Garnet network in a standalone manner.</p></li><li><p class="s88" style="padding-top: 1pt;padding-left: 13pt;text-indent: 0pt;line-height: 69%;text-align: left;">MESI Three Level<span class="s86">: 3-level caches, strictly-inclusive hierarchy. Based on MESI Two Level with an extra L0 cache.</span></p></li><li><p class="s86" style="padding-left: 22pt;text-indent: -9pt;line-height: 12pt;text-align: left;"><span style=" color: #0462C1; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 10.5pt;">CHI</span>: flexible protocol that implements Arm’s AMBA5 CHI transactions. Supports configurable</p></li></ol><p class="s86" style="padding-left: 13pt;text-indent: 0pt;line-height: 15pt;text-align: left;">cache hierarchy with both MESI or MOESI coherency.</p><p class="s89" style="padding-left: 70pt;text-indent: 0pt;line-height: 50pt;text-align: left;">QA</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s90" style="padding-left: 101pt;text-indent: 0pt;line-height: 54pt;text-align: center;">Thanks</p></body></html>
